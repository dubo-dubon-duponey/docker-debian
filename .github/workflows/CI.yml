name: CI

on: [push, pull_request]

jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Enable cache
        uses: actions/cache@v2.1.1
        with:
          path: $GITHUB_WORKSPACE/cache
          key: cache

        # XXX move to container tooling
      - name: Install hadolint
        run: |
          curl --proto '=https' --tlsv1.3 -sSfL -o hadolint "https://github.com/hadolint/hadolint/releases/download/v2.5.0/hadolint-$(uname -s)-$(uname -m)"
          chmod 700 ./hadolint

        # XXX move to container tooling
      - name: Install cuelang
        run: |
          curl --proto '=https' --tlsv1.3 -sSfL -o cue.tar.gz "https://github.com/cuelang/cue/releases/download/v0.4.0/cue_v0.4.0_$(uname -s)_$(uname -m).tar.gz"
          tar -xf cue.tar.gz
          rm cue.tar.gz

      #- name: Install buildctl & cue
          #  run: |
          #docker run --name dubo-tools "ghcr.io/dubo-dubon-duponey/tools:linux-2021-06-01" /boot/bin/cue >/dev/null 2>&1 || true
          #docker cp dubo-tools:/boot/bin/cue .
        #docker cp dubo-tools:/boot/bin/buildctl .

      # XXX update this to a more recent apt proxy
      - name: Start apt proxy
        run: |
          mkdir -p "$GITHUB_WORKSPACE/cache/apt"
          chmod a+rwx "$GITHUB_WORKSPACE/cache/apt"
          docker run --rm -d --pull always \
            --name apt-cache \
            --read-only \
            --cap-drop=ALL \
            --expose 3142 \
            --volume $GITHUB_WORKSPACE/cache/apt:/data \
              dubodubonduponey/aptutil:buster-2020-08-01

      - name: test
        run: |
          export BIN_LOCATION="."
          PATH="$BIN_LOCATION:$PATH"
          cd "$GITHUB_WORKSPACE"
          ./hack/lint.sh
          # Hiding the read-only token base64 to avoid github disabling it...
          echo OWMyMGVhYzk4N2NhYWQxYmI3MzhmNTZkODNmOGMwOGJjZjlhNDc4YQo= | base64 -d | docker login ghcr.io -u dubo-dubon-duponey --password-stdin
          # Inject our proxy and environment in the test
          ./test.sh --inject apt_proxy="http://$(docker inspect aptcache | jq -rc .[0].NetworkSettings.Networks.bridge.IPAddress):3142" ".github/workflows/environment.cue"
